-----------------------------------------------
【原始日志文件】
time+','+日志内容
2016-06-16 10:45:52,aaaaa
2016-06-16 10:45:53,bbbb
2016-06-16 10:45:53,315 INFO org.apache.hadoop.metrics2.impl.MetricsConfig: loaded properties from hadoop-metrics2.properties
-----------------------------------------------
【DataPreprocessing】：输出预处理后的文件
log+'\t'+logName1+'\t'+time1+','+time2+','+...+','+timen+'\t'+logName1+'\t'+time1+','+time2+','+...+','+timem+....
总结就是：
日志内容+index{文件名1[时间1，时间2],文件名2[时间1，时间2，...]，...，文件名n[时间1，时间2，...]}
例：
809 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: registered UNIX signal handlers for [TERM, HUP, INT] helloworld	log1	2016-06-16 10:45:52,2016-06-16 10:46:52	log2	2016-07-16 10:45:52,2016-08-16 10:46:52
864 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: Receiving BP-728444363-127.0.1.1-1466045010214:blk_1073741825_1001 src: /127.0.0.1:37562 dest: /127.0.0.1:50010	log1	2016-06-16 10:49:06

-----------------------------------------------
【LogToMeta】：输出Dict文件:
一行一个日志内容，第一行对应sid==0，以此类推，第i行sid=i-1。日志内容是按照该日志的索引大小升序排列的。
例如：
dd
ccc
e
bbbb
aaaaa
-----------------------------------------------
【MetaFileSplit】：输出使用sid描述的日志文件
log_meta+'\t'+logName1+'\t'+time1+','+time2+','+...+','+timen+'\t'+logName1+'\t'+time1+','+time2+','+...+','+timem+....
总结就是：
日志代记Meta+index{文件名1[时间1，时间2],文件名2[时间1，时间2，...]，...，文件名n[时间1，时间2，...]}
例：
0	log1	2016-06-16 10:45:53
1	log1	2016-06-16 10:45:53
10	log1	2016-06-16 10:45:54
100	log1	2016-06-16 10:45:52,2016-06-16 10:46:52
11	log1	2016-06-16 10:45:54
-----------------------------------------------
【FrequentSequenceDiscovery】：输出频繁序列
频繁序列+':'+频繁序列索引(文件1,开始时间1,结束时间1，开始时间2，结束时间2...+'\t'+文件2,...)
4,3,1:log2,1466045154000,1466045156000	log1,1466045152000,1466045154000
2,4,3:log2,1466045153000,1466045155000	log1,1466045155000,1466045157000
2,3,4:log3,1466045152000,1466045156000,1466045154000,1466045156000	log1,1466045155000,1466045158000
-----------------------------------------------
【DistributedRuleGenerator】：输出规则打分数组
逗号分隔序列+'\t'+逗号分隔打分数组
例：
1	-2147483648
4,1	-2147483648,-2
2,4,3	-2147483648,-4,-2
-----------------------------------------------
【DistributedRuleGenerator】：最终规则
前缀+'->'+后缀
例：
->0
0->2
0,2->3
0,2->4
-----------------------------------------------